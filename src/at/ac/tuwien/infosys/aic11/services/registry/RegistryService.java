package at.ac.tuwien.infosys.aic11.services.registry;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.0 2011-11-13T05:04:17.403+01:00
 * Generated source version: 2.5.0
 * 
 */
@WebServiceClient(name = "Registry_Service", wsdlLocation = "http://vc.infosys.tuwien.ac.at:8092/registry?wsdl", targetNamespace = "http://services.aic11.infosys.tuwien.ac.at/")
public class RegistryService extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName(
			"http://services.aic11.infosys.tuwien.ac.at/", "Registry_Service");
	public final static QName RegistryService = new QName(
			"http://services.aic11.infosys.tuwien.ac.at/", "Registry_Service");
	static {
		URL url = null;
		try {
			url = new URL("http://vc.infosys.tuwien.ac.at:8092/registry?wsdl");
		} catch (MalformedURLException e) {
			java.util.logging.Logger
					.getLogger(RegistryService.class.getName())
					.log(java.util.logging.Level.INFO,
							"Can not initialize the default wsdl from {0}",
							"http://vc.infosys.tuwien.ac.at:8092/registry?wsdl");
		}
		WSDL_LOCATION = url;
	}

	public RegistryService(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public RegistryService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public RegistryService() {
		super(WSDL_LOCATION, SERVICE);
	}

	/**
	 * 
	 * @return returns IRegistryService
	 */
	@WebEndpoint(name = "Registry_Service")
	public IRegistryService getRegistryService() {
		return super.getPort(RegistryService, IRegistryService.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns IRegistryService
	 */
	@WebEndpoint(name = "Registry_Service")
	public IRegistryService getRegistryService(WebServiceFeature... features) {
		return super.getPort(RegistryService, IRegistryService.class, features);
	}

}
