package services.aic11.infosys.tuwien.ac.at;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.0
 * 2011-11-13T03:19:26.479+01:00
 * Generated source version: 2.5.0
 * 
 */
@WebServiceClient(name = "ShippingService", 
                  wsdlLocation = "http://localhost:8093/ShippingService?wsdl",
                  targetNamespace = "http://at.ac.tuwien.infosys.aic11.services") 
public class ShippingService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://at.ac.tuwien.infosys.aic11.services", "ShippingService");
    public final static QName ShippingPort = new QName("http://at.ac.tuwien.infosys.aic11.services", "ShippingPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8093/ShippingService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ShippingService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8093/ShippingService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ShippingService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ShippingService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ShippingService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns Shipping
     */
    @WebEndpoint(name = "ShippingPort")
    public Shipping getShippingPort() {
        return super.getPort(ShippingPort, Shipping.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Shipping
     */
    @WebEndpoint(name = "ShippingPort")
    public Shipping getShippingPort(WebServiceFeature... features) {
        return super.getPort(ShippingPort, Shipping.class, features);
    }

}
